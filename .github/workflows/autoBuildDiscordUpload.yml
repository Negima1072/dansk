name: release

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: build
      run: |
        npm install
        ls
        npm run build
    - name: Zip output
      run: |
        zip -r ${GITHUB_REF##*/}.zip dist
    - name: UploadZip
      run: | 
        echo '${GITHUB_REF##*/}'
        curl -X POST -F 'payload_json={"content": "新しいバージョンのリリースのお知らせです😎\rバージョン：'${GITHUB_REF##*/}'\rご意見・ご要望は #ツール・スクリプト関連チャンネル にお願いします"}' -F "file1=@${GITHUB_REF##*/}.zip" "https://discord.com/api/webhooks/999320563807948850/dy0fxC9NHgjF6WLWh4ancsWGiDw_noid6ZXbK7cPzQLJ5-jt5BPTnWGYIiC90u_laWlP"
    
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: ${{ github.ref }}
    #     body: |
    #       Release note here
    #     draft: true
    #     prerelease: false
    #     
    # - name: Upload Release Artifact
    #   id: upload_artifact
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ${{ github.workspace }}/${GITHUB_REF##*/}.zip
    #     asset_name: ${GITHUB_REF##*/}.zip
    #     asset_content_type: application/zip